// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  username    String        @unique
  clerkId     String        @unique
  name        String?
  image       String?
  bio         String?
  onboarded   Boolean       @default(false)
  threads     Threads[]
  communities Communities[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Threads {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  userId      String       @db.ObjectId
  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  text        String
  imageUrls   String[]
  // Self-referential relationship
  parentId    String?      @db.ObjectId
  parent      Threads?     @relation("ThreadParent", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children    Threads[]    @relation("ThreadParent")
  communityId String?      @db.ObjectId
  community   Communities? @relation(fields: [communityId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Communities {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Threads   Threads[]
}
